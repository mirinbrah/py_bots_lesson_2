def demonstrate_slicing():
    """
    Эта функция наглядно демонстрирует все основные виды срезов (slicing)
    на примере списка букв. Срезы работают аналогично для кортежей и строк.

    Основа синтаксиса: list[start:stop:step]
    - start: индекс начала (включается)
    - stop: индекс конца (НЕ включается)
    - step: шаг
    """

    # Исходный список для всех примеров
    letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']
    print(f"Исходный список: {letters}")
    print("Индексы:          0    1    2    3    4    5    6    7")
    print("Отрицательные:   -8   -7   -6   -5   -4   -3   -2   -1\n")

    # 1. Срез от начала до указанного элемента: [:stop]
    first_three = letters[:3]
    print(f"1. С начала до индекса 3: letters[:3]  -> {first_three}")

    # 2. Срез от указанного элемента до конца: [start:]
    all_after_d = letters[4:]
    print(f"2. От индекса 4 до конца: letters[4:]  -> {all_after_d}")

    # 3. Срез в конкретном диапазоне: [start:stop]
    middle_part = letters[1:4]
    print(f"3. От индекса 1 до 4:    letters[1:4] -> {middle_part}")

    # 4. Использование отрицательных индексов (с конца)
    last_three = letters[-3:]
    print(f"4. Последние 3 элемента:  letters[-3:] -> {last_three}")

    all_but_last_two = letters[:-2]
    print(f"   Все, кроме 2х послед.: letters[:-2] -> {all_but_last_two}")

    # 5. Срез с шагом: [::step]
    every_second = letters[::2]
    print(f"5. Каждый 2-й элемент:    letters[::2]  -> {every_second}")

    # 6. Переворот списка с помощью среза: [::-1]
    reversed_letters = letters[::-1]
    print(f"6. Перевернутый список:    letters[::-1] -> {reversed_letters}")

    # 7. Создание полной копии: [:]
    letters_copy = letters[:]
    print(f"7. Полная копия списка:   letters[:]   -> {letters_copy}")
    # Проверим, что это действительно копия
    letters_copy[0] = 'Z'
    print(f"   Измененная копия: {letters_copy}")
    print(f"   Оригинал не изменился: {letters}")


if __name__ == "__main__":
    demonstrate_slicing()

"""
--- Сводная таблица-шпаргалка по срезам (Slicing Cheatsheet) ---

Исходный список: letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']

| Синтаксис       | Что делает                               | Пример (letters) | Результат                               |
|-----------------|------------------------------------------|------------------|-----------------------------------------|
| `[:]`           | Создает полную копию                     | `letters[:]`     | `['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']` |
| `[:stop]`       | Срез от начала до `stop`                 | `letters[:3]`    | `['a', 'b', 'c']`                         |
| `[start:]`      | Срез от `start` до конца                 | `letters[5:]`    | `['f', 'g', 'h']`                         |
| `[start:stop]`  | Срез от `start` до `stop`                | `letters[2:5]`   | `['c', 'd', 'e']`                         |
| `[-start:]`     | Срез последних `start` элементов         | `letters[-2:]`   | `['g', 'h']`                              |
| `[:-stop]`      | Все, кроме последних `stop` элементов    | `letters[:-3]`   | `['a', 'b', 'c', 'd', 'e']`               |
| `[::step]`      | Каждый `step`-ый элемент всего списка     | `letters[::3]`   | `['a', 'd', 'g']`                         |
| `[start::step]` | Каждый `step`-ый элемент от `start`      | `letters[1::2]`  | `['b', 'd', 'f', 'h']`                    |
| `[::-1]`        | Переворачивает список (шаг -1)           | `letters[::-1]`  | `['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a']` |

"""